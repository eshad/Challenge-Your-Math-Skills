{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/api/submit-answer/route/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\nexport type Database = {\n  public: {\n    Tables: {\n      math_problem_sessions: {\n        Row: {\n          id: string\n          created_at: string\n          problem_text: string\n          final_answer: number\n        }\n        Insert: {\n          id?: string\n          created_at?: string\n          problem_text: string\n          final_answer: number\n        }\n        Update: {\n          id?: string\n          created_at?: string\n          problem_text?: string\n          final_answer?: number\n        }\n      }\n      math_problem_submissions: {\n        Row: {\n          id: string\n          session_id: string\n          user_answer: number\n          is_correct: boolean\n          feedback: string\n          created_at: string\n        }\n        Insert: {\n          id?: string\n          session_id: string\n          user_answer: number\n          is_correct: boolean\n          feedback: string\n          created_at?: string\n        }\n        Update: {\n          id?: string\n          session_id?: string\n          user_answer?: number\n          is_correct?: boolean\n          feedback?: string\n          created_at?: string\n        }\n      }\n    }\n  }\n}"],"names":[],"mappings":";;;;;;AAEA,MAAM;AACN,MAAM;AAEN;;;AAIO,MAAM,WAAW,wMAAa,aAAa"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/submit-answer/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { GoogleGenerativeAI } from '@google/generative-ai'\nimport { supabase } from '@/lib/supabaseClient'\n\nconst genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY!)\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { session_id, user_answer } = await request.json()\n\n    if (!session_id || user_answer === undefined || user_answer === null) {\n      return NextResponse.json(\n        { error: 'Missing required fields: session_id and user_answer' },\n        { status: 400 }\n      )\n    }\n\n    const { data: session, error: sessionError } = await supabase\n      .from('math_problem_sessions')\n      .select('*')\n      .eq('id', session_id)\n      .single()\n\n    if (sessionError || !session) {\n      return NextResponse.json(\n        { error: 'Session not found' },\n        { status: 404 }\n      )\n    }\n\n    const userAnswerNum = parseFloat(user_answer)\n    const finalAnswerNum = parseFloat(session.final_answer)\n\n    const tolerance = 0.01\n    const isCorrect = Math.abs(userAnswerNum - finalAnswerNum) < tolerance\n\n    const feedbackPrompt = `\nYou are a helpful Primary 5 math tutor. A student just answered a math problem.\n\nProblem: ${session.problem_text}\nCorrect answer: ${session.final_answer}\nStudent's answer: ${user_answer}\nResult: ${isCorrect ? 'CORRECT' : 'INCORRECT'}\n\nProvide personalized, encouraging feedback in 2-3 sentences. \n- If correct: Praise them and briefly explain why the answer is right.\n- If incorrect: Gently correct them, show the right answer, and give a hint about the method.\n\nKeep it friendly and age-appropriate for a 10-11 year old.\n`\n\n    const model = genAI.getGenerativeModel({ model: 'gemini-2.5-flash' })\n    const result = await model.generateContent(feedbackPrompt)\n    const response = await result.response\n    const feedback = response.text()\n\n    const { data: submission, error: submissionError } = await supabase\n      .from('math_problem_submissions')\n      .insert({\n        session_id,\n        user_answer: userAnswerNum,\n        is_correct: isCorrect,\n        feedback,\n      })\n      .select()\n      .single()\n\n    if (submissionError) {\n      console.error('Database error:', submissionError)\n      throw submissionError\n    }\n\n    return NextResponse.json({\n      ...submission,\n      correct_answer: session.final_answer,\n    })\n  } catch (error: any) {\n    console.error('Error submitting answer:', error)\n    return NextResponse.json(\n      { error: error.message || 'Failed to submit answer' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,QAAQ,yLAAuB,QAAQ,GAAG,CAAC,cAAc;AAExD,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEtD,IAAI,CAAC,cAAc,gBAAgB,aAAa,gBAAgB,MAAM;YACpE,OAAO,wLAAa,IAAI,CACtB;gBAAE,OAAO;YAAsD,GAC/D;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,kIAClD,IAAI,CAAC,yBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,YACT,MAAM;QAET,IAAI,gBAAgB,CAAC,SAAS;YAC5B,OAAO,wLAAa,IAAI,CACtB;gBAAE,OAAO;YAAoB,GAC7B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,gBAAgB,WAAW;QACjC,MAAM,iBAAiB,WAAW,QAAQ,YAAY;QAEtD,MAAM,YAAY;QAClB,MAAM,YAAY,KAAK,GAAG,CAAC,gBAAgB,kBAAkB;QAE7D,MAAM,iBAAiB,CAAC;;;SAGnB,EAAE,QAAQ,YAAY,CAAC;gBAChB,EAAE,QAAQ,YAAY,CAAC;kBACrB,EAAE,YAAY;QACxB,EAAE,YAAY,YAAY,YAAY;;;;;;;AAO9C,CAAC;QAEG,MAAM,QAAQ,MAAM,kBAAkB,CAAC;YAAE,OAAO;QAAmB;QACnE,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;QAC3C,MAAM,WAAW,MAAM,OAAO,QAAQ;QACtC,MAAM,WAAW,SAAS,IAAI;QAE9B,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,eAAe,EAAE,GAAG,MAAM,kIACxD,IAAI,CAAC,4BACL,MAAM,CAAC;YACN;YACA,aAAa;YACb,YAAY;YACZ;QACF,GACC,MAAM,GACN,MAAM;QAET,IAAI,iBAAiB;YACnB,QAAQ,KAAK,CAAC,mBAAmB;YACjC,MAAM;QACR;QAEA,OAAO,wLAAa,IAAI,CAAC;YACvB,GAAG,UAAU;YACb,gBAAgB,QAAQ,YAAY;QACtC;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,wLAAa,IAAI,CACtB;YAAE,OAAO,MAAM,OAAO,IAAI;QAA0B,GACpD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}